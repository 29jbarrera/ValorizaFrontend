import { ApplicationConfig, importProvidersFrom } from '@angular/core';
import { provideRouter } from '@angular/router';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { routes } from './app.routes';
import { FormlyModule } from '@ngx-formly/core';
import {
  HTTP_INTERCEPTORS,
  HttpClientModule,
  provideHttpClient,
  withFetch,
  withInterceptorsFromDi,
} from '@angular/common/http';
import {
  MSAL_GUARD_CONFIG,
  MSAL_INSTANCE,
  MSAL_INTERCEPTOR_CONFIG,
  MsalBroadcastService,
  MsalGuard,
  MsalInterceptor,
  MsalService,
} from '@azure/msal-angular';
import {
  MSALGuardConfigFactory,
  MSALInstanceFactory,
  MSALInterceptorConfigFactory,
} from './ms';
import { provideIonicAngular } from '@ionic/angular/standalone';
import { IonicModule } from '@ionic/angular';
import { FormlyPrimeNGModule } from '@ngx-formly/primeng';
import { FormlyDatepickerModule } from '@ngx-formly/primeng/datepicker';
import { SelectWithFilterComponent } from './components/modal-form/select-with-filter/select-with-filter.component';

// ----- ----- Autogenerated ----- ----- //
import {
  ApiModule,
  Configuration,
} from './typescript-angular-client-generated';

// Provisioning
import {
  ApiModule as ProvisioningApiModule,
  Configuration as ProvisioningConfiguration,
} from './auto-generated/provisioning';
// ----- ----- Autogenerated ----- ----- //

export const appConfig: ApplicationConfig = {
  providers: [
    provideRouter(routes),
    provideIonicAngular({}),
    importProvidersFrom([
      IonicModule.forRoot(),
      BrowserAnimationsModule,
      FormlyModule.forRoot({
        validationMessages: [
          { name: 'required', message: 'This field is required' },
        ],
        types: [
          { name: 'custom-dropdown', component: SelectWithFilterComponent },
        ],
      }),
      FormlyPrimeNGModule,
      FormlyDatepickerModule,
      HttpClientModule,
      ApiModule.forRoot(
        () =>
          new Configuration({
            // basePath: 'http://localhost:5051',
            basePath: 'http://10.243.53.212:5051',
          })
      ),
      ProvisioningApiModule.forRoot(
        () =>
          new ProvisioningConfiguration({
            // basePath: 'http://localhost:5051',
            basePath: 'http://10.243.53.212:5051',
          })
      ),
    ]),
    // Microsoft
    provideHttpClient(withInterceptorsFromDi(), withFetch()),
    // {
    //   provide: HTTP_INTERCEPTORS,
    //   useClass: TokenInterceptor,
    //   multi: true,
    // },
    {
      provide: HTTP_INTERCEPTORS,
      useClass: MsalInterceptor,
      multi: true,
    },
    {
      provide: MSAL_INSTANCE,
      useFactory: MSALInstanceFactory,
    },
    {
      provide: MSAL_GUARD_CONFIG,
      useFactory: MSALGuardConfigFactory,
    },
    {
      provide: MSAL_INTERCEPTOR_CONFIG,
      useFactory: MSALInterceptorConfigFactory,
    },
    MsalService,
    MsalGuard,
    MsalBroadcastService,
  ],
};
